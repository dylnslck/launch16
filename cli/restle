#!/usr/bin/env node

const program = require('commander');

const pkg = require('./package.json');
const login = require('./commands/login');
const logout = require('./commands/logout');
const init = require('./commands/init');
const schema = require('./commands/schema');
const start = require('./commands/start');
const scale = require('./commands/scale');
const test = require('./commands/test');

program
  .version(pkg.version);

program
  .command('login')
  .description('log in to Restle')
  .action(login);

program
  .command('logout')
  .description('log out from Restle')
  .action(logout);

program
  .command('init <name>')
  .description('scaffolds a Restle application')
  .action(init);

program
  .command('schema <action> <type> [fields...]')
  .alias('schemas')
  .description('add and remove Restle schemas')
  .action(schema);

program
  .command('start')
  .option('-p, --port <port>', 'the port to run the instance on')
  .description('starts a Restle instance on localhost')
  .action(start);

program
  .command('scale <number>')
  .description('scales the currently deployed Restle instance')
  .action(scale);

program
  .command('test <method> <endpoint>')
  .option('-s, --stress <rps>')
  .description('tests api endpoints of the currently reployed Reslte app')
  .action(test);

program.parse(process.argv);

const validCommands = /(login|logout|init|schemas?|start|scale)/;
const command = process.argv[2];

if (!command || !validCommands.test(command)) program.help();
